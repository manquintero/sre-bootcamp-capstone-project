name: 'Terraform'
'on':
  push:
    branches:
      - infra
  pull_request:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      # - name: Terraform Init
      #   run: terraform init -input=false

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: |
          find infrastructure/ -name main.tf -exec dirname {} \; | xargs -L1 -i terraform -chdir={} fmt -check

      # # Generates an execution plan for Terraform
      # - name: Terraform Plan
      #   run: terraform plan

      # # On push to main, build or change infrastructure according to Terraform configuration files
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve
