name: CI
'on':
  push:
    branches:
      - devel
  pull_request:
    branches:
      - main
env:
  IMAGE: academy-sre-bootcamp-manuel-quintero
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: >
          python -m pip install --upgrade pip

          pip install pylint

          [[ -f "./python/requirements.txt" ]] && pip install -r
          "./python/requirements.txt"
      - name: Analysing the code with pylint
        run: |
          pylint python/
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov mock
          [[ -f "./python/requirements.txt" ]] && pip install -r "./python/requirements.txt"
      - name: Test with pytest
        run: |
          pytest python
      - name: Build Coverage
        run: |
          pytest --cov-config=python/.coveragerc --cov python > pytest-coverage.txt
      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
  docker:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: '${{ secrets.DOCKER_HUB_USERNAME }}'
          password: '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./python
          push: true
          tags: "${{ secrets.DOCKER_HUB_USERNAME }}/${IMAGE}:latest"
        env:
          DB_USERNAME: '${{ secrets.DB_USERNAME }}'
          DB_PASS: '${{ secrets.DB_PASS }}'
          JWT_TOKEN: '${{ secrets.JWT_TOKEN }}'
      - name: Image digest
        run: 'echo ${{ steps.docker_build.outputs.digest }}'

